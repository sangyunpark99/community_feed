plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1' // Spring Boot 플러그인
    id 'io.spring.dependency-management' version '1.1.5' // 의존성 버전 관리 플러그인
}

group = 'org.sangyunpark99'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    //spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor("org.projectlombok:lombok")

    // JWT 토큰
    implementation("io.jsonwebtoken:jjwt-api:0.12.6")
    implementation("io.jsonwebtoken:jjwt-impl:0.12.6")
    runtimeOnly("io.jsonwebtoken:jjwt-gson:0.12.6")

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // rest-assured
    testImplementation 'io.rest-assured:rest-assured:5.5.0'
    runtimeOnly('com.h2database:h2')
}

test {
    useJUnitPlatform()
}

/**
 * QueryDSL Build Options
 */
// === Querydsl 빌드 옵션 (선택사항) ===
def querydslDir = "${project.buildDir}/generated/querydsl";

sourceSets {
    main.java.srcDirs += querydslDir
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

tasks.named("clean").configure {
    doLast {
        file(querydslDir).deleteDir();
    }
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}